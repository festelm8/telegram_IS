"""empty message

Revision ID: 446dc8f085a4
Revises: 
Create Date: 2018-01-25 21:42:50.220702

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '446dc8f085a4'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('course_themes',
    sa.Column('id', postgresql.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='course_themes_pkey')
    )
    op.create_table('teachers',
    sa.Column('id', postgresql.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='teachers_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('course_numbers',
    sa.Column('id', postgresql.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('number', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('course_theme_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['course_theme_id'], ['course_themes.id'], name='course_numbers_course_theme_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='course_numbers_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('subjects',
    sa.Column('id', postgresql.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('teacher_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('desc', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.id'], name='subjects_teacher_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='subjects_pkey')
    )
    op.create_table('class_schedule',
    sa.Column('id', postgresql.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('dow', sa.VARCHAR(length=5), autoincrement=False, nullable=True),
    sa.Column('classroom', sa.VARCHAR(length=30), autoincrement=False, nullable=True),
    sa.Column('course_number', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('subject', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['course_number'], ['course_numbers.id'], name='class_schedule_course_number_fkey'),
    sa.ForeignKeyConstraint(['subject'], ['subjects.id'], name='class_schedule_subject_fkey'),
    sa.PrimaryKeyConstraint('id', name='class_schedule_pkey')
    )
    op.create_table('course_groups',
    sa.Column('id', postgresql.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('gid', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('course_number_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['course_number_id'], ['course_numbers.id'], name='course_groups_course_number_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='course_groups_pkey')
    )
    op.create_table('course_number_subjects',
    sa.Column('course_number_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('subject_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['course_number_id'], ['course_numbers.id'], name='course_number_subjects_course_number_id_fkey'),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], name='course_number_subjects_subject_id_fkey')
    )
    op.create_table('event_log',
    sa.Column('id', postgresql.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('msg', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('course_number_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['course_number_id'], ['course_numbers.id'], name='event_log_course_number_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='event_log_pkey')
    )
    op.create_table('users',
    sa.Column('id', postgresql.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('tid', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('password', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('course_group_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('is_banned', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('banned_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('(now())::timestamp(0) without time zone'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['course_group_id'], ['course_groups.id'], name='users_course_group_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='users_pkey')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users')
    op.drop_table('event_log')
    op.drop_table('course_number_subjects')
    op.drop_table('course_groups')
    op.drop_table('class_schedule')
    op.drop_table('subjects')
    op.drop_table('course_numbers')
    op.drop_table('teachers')
    op.drop_table('course_themes')
    # ### end Alembic commands ###
